which(cat$HUC8 %in% join$HUC)
catchments@data[,names(catchments@data) == HUC] <- as.numeric(paste0(catchments@data[,names(catchments@data) == HUC]))
forest <- read.dbf('C:/KPONEIL/zonalStatistics/dataOut/arcOutputTables/NENY_HUCs/NENY_HUC8_forest.dbf')
library(foreign)
forest <- read.dbf('C:/KPONEIL/zonalStatistics/dataOut/arcOutputTables/NENY_HUCs/NENY_HUC8_forest.dbf')
forest
load('C:/KPONEIL/zonalStatistics/dataOut/covariateData/NENY_CovariateData_2014-06-05.RData')
head(LocalStats)
unique(LocalStats$HUC_8)
order(unique(LocalStats$HUC_8))
str(LocalStats)
str(cat)
cat <- catchments@data
str(cat)
cat$HUC8 <- paste0(cat$HUC8)
str(cat)
huc <- (unique(LocalStats$HUC_8))
which(!cat$HUC8 %in% huc)
cat$HUC8[which(!cat$HUC8 %in% huc)]
which(is.na(LocalStats$HUC8))
LocalStats$HUC8
LocalStats$HUC_8
unique(LocalStats$HUC_8)
LocalStats[LocalStats$FEATUREID == 4577892,]
LocalStats$HUC_8[LocalStats$FEATUREID == 4577892,]
LocalStats$HUC_8[LocalStats$FEATUREID == 4577892]
length(which(is.na(LocalStats$HUC8)))
newhuc <- read.dbf('C:/KPONEIL/zonalStatistics/fuck/JoinOutput12.dbf')
new <- read.dbf('C:/KPONEIL/zonalStatistics/fuck/Join_Output12.dbf')
head(new)
newhuc <- new[,c('FEATUREID', 'HUC4', 'HUC8', 'HUC12')]
head(newhuc)
which(is.na(newhuc))
head(LocalStats)
str(LocalStats)
str(newhuc)
newHuc <- paste0(newhuc)
str(newHuc)
unique(newhuc$HUC8)
unique(paste0(newhuc$HUC8))
newhuc$HUC4 <- paste0(newhuc$HUC4)
newhuc$HUC8 <- paste0(newhuc$HUC8)
newhuc$HUC12 <- paste0(newhuc$HUC12)
str(newhuc)
loc <- merge(LocalStats, newhuc, by = 'FEATUREID', all.x = T, all.y = F, sort = F)
str(loc)
?sweep
hucply <- unique(loc$HUC4)
head(hucply)
head(new)
unique(new$HUC4)
str(new$HUC4)
unique(newhuc$HUC4)
dim(newhuc)
dim(LocalStats)
dim(loc)
str(loc)
unique(loc$HUC4)
hucply <- unique(loc$HUC4, na.rm = T)
hucply
hucply <- unique(loc$HUC4)
for ( i in length(hucply)){
dat <- loc[loc$Huc4 == hucply[i]]
a <- apply(dat, 2, mean)
if( i = 1 ) { hucOut <- a} else( rbind(hucOut, a))
}
hucply <- unique(loc$HUC4)
for ( i in length(hucply)){
dat <- loc[loc$Huc4 == hucply[i]]
a <- apply(dat, 2, mean)
if( i == 1 ) { hucOut <- a} else( rbind(hucOut, a))
}
i
hucply <- unique(loc$HUC4)
for ( i in 1:length(hucply)){
dat <- loc[loc$Huc4 == hucply[i]]
a <- apply(dat, 2, mean)
if( i == 1 ) { hucOut <- a} else( rbind(hucOut, a))
}
hucOut
loc$Huc4
loc$HUC4
hucply <- unique(loc$HUC4)
for ( i in 1:length(hucply)){
dat <- loc[loc$HUC4 == hucply[i]]
a <- apply(dat, 2, mean)
if( i == 1 ) { hucOut <- a} else( rbind(hucOut, a))
}
i
hucply <- unique(loc$HUC4)
for ( i in 1:length(hucply)){
dat <- loc[loc$HUC4 == hucply[i],]
a <- apply(dat, 2, mean)
if( i == 1 ) { hucOut <- a} else( rbind(hucOut, a))
}
warnings()
hucOut
i=1
dat <- loc[loc$HUC4 == hucply[i],]
dat
a <- apply(dat, 2, mean, na.rm = T)
warnings()
?apply
a <- colMeans(dat)
head(a)
str(dat)
a <- colMeans(dat, na.rm = T)
- which(names(loc) %in% c('HUC_4', 'HUC_8', 'HUC_12'))
loc <- loc[, - which(names(loc) %in% c('HUC_4', 'HUC_8', 'HUC_12'))]
str(loc)
i
dat <- loc[loc$HUC4 == hucply[i],]
dat <- dat[, - which(names(dat) %in% c('HUC4', 'HUC8', 'HUC12'))]
a <- data.frame(hucply[i], colMeans(dat, na.rm = T))
a
a <- c(hucply[i], colMeans(dat, na.rm = T))
a
hucply <- unique(loc$HUC4)
for ( i in 1:length(hucply)){
dat <- loc[loc$HUC4 == hucply[i],]
dat <- dat[, - which(names(dat) %in% c('HUC4', 'HUC8', 'HUC12'))]
a <- c(hucply[i], colMeans(dat, na.rm = T))
if( i == 1 ) { hucOut <- a} else( rbind(hucOut, a))
}
head(hucOut)
hucOut
i
i = 1
dat <- loc[loc$HUC4 == hucply[i],]
dat <- dat[, - which(names(dat) %in% c('HUC4', 'HUC8', 'HUC12'))]
a <- c(hucply[i], colMeans(dat, na.rm = T))
if( i == 1 ) { hucOut <- a} else( rbind(hucOut, a))
a
hucOut
i = 2
dat <- loc[loc$HUC4 == hucply[i],]
dat <- dat[, - which(names(dat) %in% c('HUC4', 'HUC8', 'HUC12'))]
a <- c(hucply[i], colMeans(dat, na.rm = T))
for ( i in 1:length(hucply)){
dat <- loc[loc$HUC4 == hucply[i],]
dat <- dat[, - which(names(dat) %in% c('HUC4', 'HUC8', 'HUC12'))]
a <- c(hucply[i], colMeans(dat, na.rm = T))
if( i == 1 ) { hucOut <- a} else( hucOut <- rbind(hucOut, a))
}
hucOut
a <- c(HUC4 = hucply[i], colMeans(dat, na.rm = T))
a
hucply <- unique(loc$HUC4)
for ( i in 1:length(hucply)){
dat <- loc[loc$HUC4 == hucply[i],]
dat <- dat[, - which(names(dat) %in% c('HUC4', 'HUC8', 'HUC12'))]
a <- c(HUC4 = hucply[i], colMeans(dat, na.rm = T))
if( i == 1 ) { hucOut <- a} else( hucOut <- rbind(hucOut, a))
}
HUC4 <- hucOut
HUC4
str(HUC4)
HUC4 <- data.frame(hucOut)
HUC4
dim(HUC4)
hucply <- unique(loc$HUC8)
for ( i in 1:length(hucply)){
dat <- loc[loc$HUC8 == hucply[i],]
dat <- dat[, - which(names(dat) %in% c('HUC4', 'HUC8', 'HUC12'))]
a <- c(HUC8 = hucply[i], colMeans(dat, na.rm = T))
if( i == 1 ) { hucOut <- a} else( hucOut <- rbind(hucOut, a))
}
HUC8 <- data.frame(hucOut)
head(HUC8)
hucply <- unique(loc$HUC12)
for ( i in 1:length(hucply)){
dat <- loc[loc$HUC12 == hucply[i],]
dat <- dat[, - which(names(dat) %in% c('HUC4', 'HUC8', 'HUC12'))]
a <- c(HUC12 = hucply[i], colMeans(dat, na.rm = T))
if( i == 1 ) { hucOut <- a} else( hucOut <- rbind(hucOut, a))
}
i
length(hucply)
write.csv(HUC4,  file = "C:/KPONEIL/zonalStatistics/fuck/HUC4stats.csv" )
write.csv(HUC8,  file = "C:/KPONEIL/zonalStatistics/fuck/HUC8stats.csv" )
hucply <- unique(loc$HUC12)
for ( i in 1:length(hucply)){
dat <- loc[loc$HUC12 == hucply[i],]
dat <- dat[, - which(names(dat) %in% c('HUC4', 'HUC8', 'HUC12'))]
a <- c(HUC12 = hucply[i], colMeans(dat, na.rm = T))
if( i == 1 ) { hucOut <- a} else( hucOut <- rbind(hucOut, a))
print(i/length(hucply))
}
typeof(colMeans(dat, na.rm = T))
class(colMeans(dat, na.rm = T))
class(a)
class(huc4)
class(HUC4)
str(HUC4)
huc4 <- as.numeric(HUC4)
str(hucply)
a <- c(HUC12 = as.numeric(hucply[i]), colMeans(dat, na.rm = T))
class(a)
a
a <- c(colMeans(dat, na.rm = T), HUC12 = hucply[i])
class(a)
write.dbf(HUC4,  file = "C:/KPONEIL/zonalStatistics/fuck/HUC4stats.dbf" )
write.dbf(HUC8,  file = "C:/KPONEIL/zonalStatistics/fuck/HUC8stats.dbf" )
names <- read.csv('C:/KPONEIL/zonalStatistics/fuck/names.csv')
head(names)
names <- names[names$mapper == Y, ]
names <- names[names$mapper == 'Y', ]
names
hucply <- unique(loc$HUC4)
dat <- loc[loc$HUC12 == hucply[i], names(dat) %in% names$rdata]
head(dat)
head(loc)
names(dat) %in% names$rdata
dat <- loc[loc$HUC12 == hucply[i], ]
head(dat)
dat[1:100,]
hucply <- unique(loc$HUC4)
dat <- loc[loc$HUC4 == hucply[i], ]
dat
loc <- merge(LocalStats, newhuc, by = 'FEATUREID', all.x = T, all.y = F, sort = F)
head(loc)
hucply <- unique(loc$HUC4)
hucply
i = 1
dat <- loc[loc$HUC4 == hucply[i], ]
dat
names(dat) %in% names$rdata
test ,- dat[names(dat) %in% names$rdata]
test <- dat[names(dat) %in% names$rdata]
head(test)
a <- c(colMeans(dat, na.rm = T), HUC12 = hucply[i])
str(dat)
dat <- dat[names(dat) %in% names$rdata]
str(dat)
a <- c(colMeans(dat, na.rm = T), HUC12 = hucply[i])
class(a)
a <- c(colMeans(dat, na.rm = T))#, HUC12 = hucply[i])
a
class(a)
hucply <- unique(loc$HUC4)
for ( i in 1:length(hucply)){
dat <- loc[loc$HUC4 == hucply[i], ]
dat <- dat[names(dat) %in% names$rdata]
a <- c(colMeans(dat, na.rm = T))
if( i == 1 ) { hucOut <- a} else( hucOut <- rbind(hucOut, a))
print(i/length(hucply))
}
HUC4 <- data.frame(hucOut)
str(HUC4)
HUC4$HUC4 <- hucply
class(HUC4)
str(HUC4)
write.dbf(HUC4,  file = "C:/KPONEIL/zonalStatistics/fuck/HUC4stats.dbf" )
write.csv(HUC4,  file = "C:/KPONEIL/zonalStatistics/fuck/HUC4stats.csv" )
write.dbf(HUC4,  file = "C:/KPONEIL/zonalStatistics/fuck/HUC4stats.dbf" )
hucply <- unique(loc$HUC8)
for ( i in 1:length(hucply)){
dat <- loc[loc$HUC8 == hucply[i], ]
dat <- dat[names(dat) %in% names$rdata]
a <- c(colMeans(dat, na.rm = T))
if( i == 1 ) { hucOut <- a} else( hucOut <- rbind(hucOut, a))
print(i/length(hucply))
}
HUC8 <- data.frame(hucOut)
HUC8$HUC8 <- hucply
write.dbf(HUC8,  file = "C:/KPONEIL/zonalStatistics/fuck/HUC8stats.dbf" )
names
nrow(names)
dim(HUC4)
j = 4
names$rdata[j]
names(HUC4)[names(HUC4) == names$rdata[j]]
names$shape[j]
for( j in nrow(names)){
names(HUC4)[names(HUC4) == names$rdata[j]] <- names$shape[j]
print(paste0(names$rdata[j], '    ',  names$shape[j])
}
for( j in nrow(names)){
names(HUC4)[names(HUC4) == names$rdata[j]] <- names$shape[j]
print(paste0(names$rdata[j], '    ',  names$shape[j]))
}
hucply <- unique(loc$HUC4)
for ( i in 1:length(hucply)){
dat <- loc[loc$HUC4 == hucply[i], ]
dat <- dat[names(dat) %in% names$rdata]
a <- c(colMeans(dat, na.rm = T))
if( i == 1 ) { hucOut <- a} else( hucOut <- rbind(hucOut, a))
print(i/length(hucply))
}
HUC4 <- data.frame(hucOut)
HUC4$HUC4 <- hucply
for( j in 1:nrow(names)){
names(HUC4)[names(HUC4) == names$rdata[j]] <- names$shape[j]
print(paste0(names$rdata[j], '    ',  names$shape[j]))
}
head(HUC4)
paste0(names$shape[j])
hucply <- unique(loc$HUC4)
for ( i in 1:length(hucply)){
dat <- loc[loc$HUC4 == hucply[i], ]
dat <- dat[names(dat) %in% names$rdata]
a <- c(colMeans(dat, na.rm = T))
if( i == 1 ) { hucOut <- a} else( hucOut <- rbind(hucOut, a))
print(i/length(hucply))
}
HUC4 <- data.frame(hucOut)
HUC4$HUC4 <- hucply
for( j in 1:nrow(names)){
names(HUC4)[names(HUC4) == names$rdata[j]] <- paste0(names$shape[j])
print(paste0(names$rdata[j], '    ',  names$shape[j]))
}
head(HUC4)
names
names <- read.csv('C:/KPONEIL/zonalStatistics/fuck/names.csv')
names <- names[names$mapper == 'Y', ]
hucply <- unique(loc$HUC4)
for ( i in 1:length(hucply)){
dat <- loc[loc$HUC4 == hucply[i], ]
dat <- dat[names(dat) %in% names$rdata]
a <- c(colMeans(dat, na.rm = T))
if( i == 1 ) { hucOut <- a} else( hucOut <- rbind(hucOut, a))
print(i/length(hucply))
}
HUC4 <- data.frame(hucOut)
HUC4$HUC4 <- hucply
for( j in 1:nrow(names)){
names(HUC4)[names(HUC4) == names$rdata[j]] <- paste0(names$shape[j])
print(paste0(names$rdata[j], '    ',  names$shape[j]))
}
head(HUC4)
write.dbf(HUC4,  file = "C:/KPONEIL/zonalStatistics/fuck/HUC4stats.dbf" )
hucply <- unique(loc$HUC8)
for ( i in 1:length(hucply)){
dat <- loc[loc$HUC8 == hucply[i], ]
dat <- dat[names(dat) %in% names$rdata]
a <- c(colMeans(dat, na.rm = T))
if( i == 1 ) { hucOut <- a} else( hucOut <- rbind(hucOut, a))
print(i/length(hucply))
}
HUC8 <- data.frame(hucOut)
HUC8$HUC8 <- hucply
for( j in 1:nrow(names)){
names(HUC8)[names(HUC8) == names$rdata[j]] <- paste0(names$shape[j])
print(paste0(names$rdata[j], '    ',  names$shape[j]))
}
head(HUC8)
write.dbf(HUC8,  file = "C:/KPONEIL/zonalStatistics/fuck/HUC8stats.dbf" )
hucply <- unique(loc$HUC12)
for ( i in 1:length(hucply)){
dat <- loc[loc$HUC12 == hucply[i], ]
dat <- dat[names(dat) %in% names$rdata]
a <- c(colMeans(dat, na.rm = T))
if( i == 1 ) { hucOut <- a} else( hucOut <- rbind(hucOut, a))
print(i/length(hucply))
}
write.dbf(HUC4,  file = "C:/KPONEIL/zonalStatistics/fuck/HUC4stats.dbf" )
hucply <- unique(loc$HUC12)
for ( i in 1:length(hucply)){
dat <- loc[loc$HUC12 == hucply[i], ]
dat <- dat[names(dat) %in% names$rdata]
a <- c(colMeans(dat, na.rm = T))
if( i == 1 ) { hucOut <- a} else( hucOut <- rbind(hucOut, a))
print(i/length(hucply))
}
HUC12 <- data.frame(hucOut)
HUC12$HUC12 <- hucply
for( j in 1:nrow(names)){
names(HUC12)[names(HUC12) == names$rdata[j]] <- paste0(names$shape[j])
print(paste0(names$rdata[j], '    ',  names$shape[j]))
}
head(HUC12)
write.dbf(HUC12,  file = "C:/KPONEIL/zonalStatistics/fuck/HUC12stats.dbf" )
HUC12 <- replace(HUC12, is.na(HUC12), -9999)
write.dbf(HUC12,  file = "C:/KPONEIL/zonalStatistics/fuck/HUC12stats.dbf" )
HUC4 <- replace(HUC4, is.na(HUC4), -9999)
write.dbf(HUC4,  file = "C:/KPONEIL/zonalStatistics/fuck/HUC4stats.dbf" )
HUC4
HUC8 <- replace(HUC8, is.na(HUC8), -9999)
write.dbf(HUC8,  file = "C:/KPONEIL/zonalStatistics/fuck/HUC8stats.dbf" )
HUC12 <- replace(HUC12, is.na(HUC12), -9999)
write.dbf(HUC12,  file = "C:/KPONEIL/zonalStatistics/fuck/HUC12stats.dbf" )
head(HUC12)
str(LocalStats)
test <- LocalStats[, - which(names(LocalStats) %in% c('HUC_4', 'HUC_8', 'HUC_12'))]
str(test)
load('C:/KPONEIL/zonalStatistics/dataOut/covariateData/NENY_CovariateData_2014-06-05.RData')
str(LocalStats)
LocalStats <- LocalStats[, - which(names(LocalStats) %in% c('HUC_4', 'HUC_8', 'HUC_12'))]
str(LocalStats)
new <- read.dbf('C:/KPONEIL/zonalStatistics/fuck/Join_Output12.dbf')
newhuc <- new[,c('FEATUREID', 'HUC4', 'HUC8', 'HUC12')]
newhuc$HUC4  <- paste0(newhuc$HUC4)
newhuc$HUC8  <- paste0(newhuc$HUC8)
newhuc$HUC12 <- paste0(newhuc$HUC12)
names(newhuc) <- c('FEATUREID', 'HUC_4', 'HUC_8', 'HUC_12')
loc <- merge(LocalStats, newhuc, by = 'FEATUREID', all.x = T, all.y = F, sort = F)
str(loc)
unique(loc$HUC_4)
unique(loc$HUC_8)
unique(loc$HUC_12)
length(which(is.na(loc$HUC_12)))
length(which(loc$HUC_12 == "NA")))
length(which(loc$HUC_12 == "NA"))
length(which(loc$HUC_8 == "NA"))
str(UpstreamStats)
load('C:/KPONEIL/zonalStatistics/dataOut/covariateData/NENY_CovariateData_2014-06-05.RData')
str(LocalStats)
LocalStats <- LocalStats[, - which(names(LocalStats) %in% c('HUC_4', 'HUC_8', 'HUC_12'))]
UpstreamStats <- UpstreamStats[, - which(names(UpstreamStats) %in% c('HUC_4', 'HUC_8', 'HUC_12'))]
str(LocalStats)
str(UpstreamStats)
new <- read.dbf('C:/KPONEIL/zonalStatistics/fuck/Join_Output12.dbf')
newhuc <- new[,c('FEATUREID', 'HUC4', 'HUC8', 'HUC12')]
str(newhuc)
newhuc$HUC4  <- paste0(newhuc$HUC4)
newhuc$HUC8  <- paste0(newhuc$HUC8)
newhuc$HUC12 <- paste0(newhuc$HUC12)
str(newhuc)
LocalStats <- merge(LocalStats, newhuc, by = 'FEATUREID', all.x = T, all.y = F, sort = F)
UpstreamStats <- merge(UpstreamStats, newhuc, by = 'FEATUREID', all.x = T, all.y = F, sort = F)
str(LocalStats)
length(which(is.na(LocalStats$HUC12)))
length(which(LocalStats$HUC12 == "NA"))
length(which(LocalStats$HUC8 == "NA"))
length(which(LocalStats$HUC4 == "NA"))
LocalStats$FEATUREID[which(LocalStats$HUC4 == "NA"))]
LocalStats$FEATUREID[which(LocalStats$HUC4 == "NA")]
length(which(UpstreamStats$HUC12 == "NA"))
length(which(UpstreamStats$HUC8 == "NA"))
length(which(UpstreamStats$HUC4 == "NA"))
save(LocalStats, UpstreamStats, file = paste0('C:/KPONEIL/zonalStatistics/dataOut/covariateData/', Sys.Date(), '.RData'))
save(LocalStats, UpstreamStats, file = paste0('C:/KPONEIL/zonalStatistics/dataOut/covariateData/NENY_CovariateData_', Sys.Date(), '.RData'))
factors <- read.csv('C:/KPONEIL/zonalStatistics/dataIn/rawZonalStatsFactorTable.csv')
factors
# Directory stuff:
baseDir <- 'C:/KPONEIL/GitHub/projects/temperatureProject/'                            # Kyle
dataInDir <- paste0(baseDir, 'dataIn/')
#Northeast
CTDEP  <- T
MAFW   <- T
MAUSGS <- T
NHFG   <- T
NHDES  <- T
USFS   <- T
VTFWS  <- T
MEDMR  <- T
sourceChoice <- list( CTDEP,   MAFW,   MAUSGS,   NHFG,   NHDES,   MEDMR,   USFS,   VTFWS,    MTUSGSYellowstone,   MTUSGSGlacier)
sourceNames  <- c   ('CTDEP', 'MAFW', 'MAUSGS', 'NHFG', 'NHDES', 'MEDMR', 'USFS', 'VTFWS',  'MTUSGSYellowstone', 'MTUSGSGlacier')
dataSource <- sourceNames[sourceChoice == T]
#Northeast
CTDEP  <- T
MAFW   <- T
MAUSGS <- T
NHFG   <- T
NHDES  <- T
USFS   <- T
VTFWS  <- T
MEDMR  <- T
sourceChoice <- list( CTDEP,   MAFW,   MAUSGS,   NHFG,   NHDES,   MEDMR,   USFS,   VTFWS )
sourceNames  <- c   ('CTDEP', 'MAFW', 'MAUSGS', 'NHFG', 'NHDES', 'MEDMR', 'USFS', 'VTFWS')
dataSource <- sourceNames[sourceChoice == T]
load('C:/KPONEIL/GitHub/projects/temperatureProject/dataIn/NENY_CovariateData_2014-06-12.RData')
masterCovariates <- LocalStats
saveUp <- UpstreamStats
load(paste0(dataSource[i], '/covariateData_', dataSource[i], '.RData'))  #masterData
i = 1
paste0(dataSource[i], '/covariateData_', dataSource[i], '.RData')
load(paste0(dataInDir, dataSource[i], '/covariateData_', dataSource[i], '.RData'))  #masterData
head(covariateData)
newHUCs <- LocalStats[LocalStats$FEATUREID %in% covariateData$FEATUREID, c('HUC4', 'HUC8', 'HUC12')]
head(newHUCs)
newHUCs <- LocalStats[LocalStats$FEATUREID %in% covariateData$FEATUREID, c('FEATUREID', 'HUC4', 'HUC8', 'HUC12')]
newHUCs
covariateData <- merge(covariateData, newHUCs, by = 'FEATUREID', all.x = T, all.y = F, sort = F)
covariateData <- covariateData[, - which(names(covariateData) %in% c('HUC_4', 'HUC_8', 'HUC_12'))]
head(covariateData)
str(covariateData)
paste0(dataInDir, dataSource[i], '/covariateData_', dataSource[i], '.RData')
rm(list=ls())
# Directory stuff:
baseDir <- 'C:/KPONEIL/GitHub/projects/temperatureProject/'                            # Kyle
dataInDir <- paste0(baseDir, 'dataIn/')
#Northeast
CTDEP  <- T
MAFW   <- T
MAUSGS <- T
NHFG   <- T
NHDES  <- T
USFS   <- T
VTFWS  <- T
MEDMR  <- T
# Data Sources
sourceChoice <- list( CTDEP,   MAFW,   MAUSGS,   NHFG,   NHDES,   MEDMR,   USFS,   VTFWS )
sourceNames  <- c   ('CTDEP', 'MAFW', 'MAUSGS', 'NHFG', 'NHDES', 'MEDMR', 'USFS', 'VTFWS')
dataSource <- sourceNames[sourceChoice == T]
# Load master covariate list:
load('C:/KPONEIL/GitHub/projects/temperatureProject/dataIn/NENY_CovariateData_2014-06-12.RData')
# rename covarite data:
masterCovariates <- LocalStats
saveUp <- UpstreamStats
setwd(dataInDir)
for ( i in 1:length(dataSource)){
load(paste0(dataInDir, dataSource[i], '/covariateData_', dataSource[i], '.RData'))  #masterData
save(covariateData, file = paste0(dataInDir, dataSource[i], '/covariateData_', dataSource[i], 'BACKUP.RData'))
newHUCs <- LocalStats[LocalStats$FEATUREID %in% covariateData$FEATUREID, c('FEATUREID', 'HUC4', 'HUC8', 'HUC12')]
covariateData <- merge(covariateData, newHUCs, by = 'FEATUREID', all.x = T, all.y = F, sort = F)
covariateData <- covariateData[, - which(names(covariateData) %in% c('HUC_4', 'HUC_8', 'HUC_12'))]
save(covariateData, file = paste0(dataInDir, dataSource[i], '/covariateData_', dataSource[i], '.RData'))
}
dim(masterCovariates)
head(masterCovariates)
head(covariateData)
